[
    {
        "id": "83999a84a6e2ec86",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8e771e50a977c0f3",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f0473a394604db55",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e0346bd36c30fa97",
        "type": "junction",
        "z": "83999a84a6e2ec86",
        "x": 520,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "118e415f53d5c04c",
        "type": "mqtt-broker",
        "name": "envdata",
        "broker": "broker.hivemq.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "ec68a6887d2ee9f0",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e7d0e47ec8cd7550",
        "type": "ui_tab",
        "name": "Gym Genius Monitor",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dcb8625254a4853e",
        "type": "ui_group",
        "name": "Entrance",
        "tab": "e7d0e47ec8cd7550",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "08720a1c55b423f2",
        "type": "ui_group",
        "name": "Changing Room",
        "tab": "e7d0e47ec8cd7550",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8da36940b7d54ef2",
        "type": "ui_group",
        "name": "Cardio Room",
        "tab": "e7d0e47ec8cd7550",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d3a91e9f4eeca1da",
        "type": "ui_group",
        "name": "Lifting Room",
        "tab": "e7d0e47ec8cd7550",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "25884423e0fb2a03",
        "type": "telegram bot",
        "botname": "TelegramBot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "testenvironment": false,
        "updatemode": "none",
        "pollinterval": 300,
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": 6667,
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbothost": "0.0.0.0",
        "localbotport": 8443,
        "publicbotport": 8443,
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "e995a2726c72d03e",
        "type": "ui_tab",
        "name": "Occupancy",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4d26335c94365a2e",
        "type": "ui_tab",
        "name": "History Data",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5c444c32fba77d46",
        "type": "ui_group",
        "name": "Entrance",
        "tab": "4d26335c94365a2e",
        "order": 1,
        "disp": true,
        "width": 20,
        "collapse": true,
        "className": ""
    },
    {
        "id": "36a01849db401df3",
        "type": "ui_group",
        "name": "Changing Room",
        "tab": "4d26335c94365a2e",
        "order": 2,
        "disp": true,
        "width": "20",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c9355b7e64101cd4",
        "type": "ui_group",
        "name": "Cardio Room",
        "tab": "4d26335c94365a2e",
        "order": 3,
        "disp": true,
        "width": "20",
        "collapse": true,
        "className": ""
    },
    {
        "id": "25d9c33a66e55a71",
        "type": "ui_group",
        "name": "Current Occupancy",
        "tab": "e995a2726c72d03e",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6ca24e17d3613a9a",
        "type": "ui_group",
        "name": "Available Machines Live",
        "tab": "e995a2726c72d03e",
        "order": 3,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6c1a546fdfb61d37",
        "type": "ui_spacer",
        "z": "8e771e50a977c0f3",
        "name": "spacer",
        "group": "25d9c33a66e55a71",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "85d20483872d2c9a",
        "type": "ui_spacer",
        "z": "8e771e50a977c0f3",
        "name": "spacer",
        "group": "6ca24e17d3613a9a",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "1ed4287a3c6e46c5",
        "type": "ui_spacer",
        "z": "8e771e50a977c0f3",
        "name": "spacer",
        "group": "dcb8625254a4853e",
        "order": 5,
        "width": 10,
        "height": 1
    },
    {
        "id": "0091607304adf427",
        "type": "ui_spacer",
        "z": "8e771e50a977c0f3",
        "name": "spacer",
        "group": "08720a1c55b423f2",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "dbb1b28798202058",
        "type": "ui_spacer",
        "z": "8e771e50a977c0f3",
        "name": "spacer",
        "group": "8da36940b7d54ef2",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "5a192a5c7e831324",
        "type": "ui_spacer",
        "z": "8e771e50a977c0f3",
        "name": "spacer",
        "group": "d3a91e9f4eeca1da",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "21c3de1bad36dc76",
        "type": "ui_group",
        "name": "Lifting Room",
        "tab": "4d26335c94365a2e",
        "order": 4,
        "disp": true,
        "width": "20",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ac4dcaf121851566",
        "type": "ui_group",
        "name": "Occupancy Prediction",
        "tab": "e995a2726c72d03e",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b84399650ce495a3",
        "type": "mqtt in",
        "z": "83999a84a6e2ec86",
        "name": "",
        "topic": "gym/environment/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "118e415f53d5c04c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 280,
        "wires": [
            [
                "b57faec4077bb335"
            ]
        ]
    },
    {
        "id": "b57faec4077bb335",
        "type": "function",
        "z": "83999a84a6e2ec86",
        "name": "HVAC",
        "func": "var payload = msg.payload;\nvar room_name = null;\nvar temperature = null;\nvar humidity = null;\n\n// 检查消息的 topic 是否是 alert，如果是，直接触发警报\nif (msg.topic && msg.topic.includes(\"alert\")) {\n    // 获取警报消息并发送\n    var alertMessage = payload.message.data.alert;  // 例如 ALARM: 温度过高！\n    room_name = msg.topic.split(\"/\").pop();  // 提取房间名\n    msg.payload = {\n        chatId: \"5777592895\",  // Chat ID\n        type: \"message\",\n        content: alertMessage\n    };\n    // 创建用于显示在 Dashboard 的警报消息\n    msg.alert = {\n        room: room_name,   // 提取的房间名\n        message: room_name + ' ' + alertMessage  // 警报内容\n    };\n\n    // 直接返回警报信息，第三个输出为警报消息\n    return [null, null, msg];\n}\n// 处理正常的数据更新 (温湿度数据)\nelse {\n    room_name = payload.bn.split(\"/\").pop();  // 提取房间名\n}\n\ntemperature = null;\nhumidity = null;\n\n// 遍历 \"e\" 数组，提取温湿度数据\npayload.e.forEach(item => {\n    if (item.n === \"temperature\") {\n        temperature = item.v;\n    }\n    if (item.n === \"humidity\") {\n        humidity = item.v;\n    }\n});\n\n// 创建温度和湿度消息\nvar tempMsg = {\n    topic: `temperature/${room_name}`,  // 温度的 topic\n    payload: temperature\n};\n\nvar humMsg = {\n    topic: `humidity/${room_name}`,  // 湿度的 topic\n    payload: humidity\n};\n\n// 如果没有警报消息，返回正常的温湿度数据\nreturn [tempMsg, humMsg, null];  // 只返回温湿度数据，第三个输出为 null\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 280,
        "wires": [
            [
                "51e58cc2a125e023"
            ],
            [
                "ec90b827ee58b706"
            ],
            [
                "895a4863be8d4500"
            ]
        ]
    },
    {
        "id": "51e58cc2a125e023",
        "type": "switch",
        "z": "83999a84a6e2ec86",
        "name": "Temperature",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "temperature/entrance",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "temperature/changing_room",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "temperature/cardio_room",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "temperature/lifting_room",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 710,
        "y": 120,
        "wires": [
            [
                "d5112acd30d89f01",
                "0ab3de718e78e840"
            ],
            [
                "ecf046c7e973f2a1",
                "815ec109ba6ee5ca"
            ],
            [
                "f6ebd663ef74e40c",
                "e9ba3a36e6d65ed4"
            ],
            [
                "0e1c460593ce2d68",
                "db1ea62c9debabf4"
            ]
        ]
    },
    {
        "id": "ec90b827ee58b706",
        "type": "switch",
        "z": "83999a84a6e2ec86",
        "name": "Humidity",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "humidity/entrance",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "humidity/changing_room",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "humidity/cardio_room",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "humidity/lifting_room",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 700,
        "y": 440,
        "wires": [
            [
                "2520e0ffeb86b62d"
            ],
            [
                "dd878b14efc5f7f1"
            ],
            [
                "672285cdac8a96d2"
            ],
            [
                "4b62f3166375d478"
            ]
        ]
    },
    {
        "id": "2520e0ffeb86b62d",
        "type": "ui_text",
        "z": "83999a84a6e2ec86",
        "group": "dcb8625254a4853e",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humidity",
        "format": "{{msg.payload}}%",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "25",
        "color": "#000000",
        "x": 960,
        "y": 360,
        "wires": []
    },
    {
        "id": "dd878b14efc5f7f1",
        "type": "ui_text",
        "z": "83999a84a6e2ec86",
        "group": "08720a1c55b423f2",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humidity",
        "format": "{{msg.payload}}%",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "25",
        "color": "#000000",
        "x": 960,
        "y": 400,
        "wires": []
    },
    {
        "id": "4b62f3166375d478",
        "type": "ui_text",
        "z": "83999a84a6e2ec86",
        "group": "d3a91e9f4eeca1da",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humidity",
        "format": "{{msg.payload}}%",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "25",
        "color": "#000000",
        "x": 960,
        "y": 480,
        "wires": []
    },
    {
        "id": "ecf046c7e973f2a1",
        "type": "ui_gauge",
        "z": "83999a84a6e2ec86",
        "name": "",
        "group": "08720a1c55b423f2",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{msg.payload}} °C",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 950,
        "y": 140,
        "wires": []
    },
    {
        "id": "0e1c460593ce2d68",
        "type": "ui_gauge",
        "z": "83999a84a6e2ec86",
        "name": "",
        "group": "d3a91e9f4eeca1da",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{msg.payload}} °C",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 950,
        "y": 300,
        "wires": []
    },
    {
        "id": "b53389baf17d0fd2",
        "type": "telegram sender",
        "z": "83999a84a6e2ec86",
        "name": "Telegram Alert",
        "bot": "25884423e0fb2a03",
        "haserroroutput": false,
        "outputs": 1,
        "x": 700,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "d5112acd30d89f01",
        "type": "ui_gauge",
        "z": "83999a84a6e2ec86",
        "name": "",
        "group": "dcb8625254a4853e",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{msg.payload}} °C",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 950,
        "y": 60,
        "wires": []
    },
    {
        "id": "672285cdac8a96d2",
        "type": "ui_text",
        "z": "83999a84a6e2ec86",
        "group": "8da36940b7d54ef2",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humidity",
        "format": "{{msg.payload}}%",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "25",
        "color": "#000000",
        "x": 960,
        "y": 440,
        "wires": []
    },
    {
        "id": "f6ebd663ef74e40c",
        "type": "ui_gauge",
        "z": "83999a84a6e2ec86",
        "name": "",
        "group": "8da36940b7d54ef2",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{msg.payload}} °C",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 950,
        "y": 220,
        "wires": []
    },
    {
        "id": "0ab3de718e78e840",
        "type": "ui_chart",
        "z": "83999a84a6e2ec86",
        "name": "Entrance Temperature",
        "group": "dcb8625254a4853e",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Entrance Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 980,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "815ec109ba6ee5ca",
        "type": "ui_chart",
        "z": "83999a84a6e2ec86",
        "name": "Changing room Temperature",
        "group": "08720a1c55b423f2",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Changing room Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1000,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e9ba3a36e6d65ed4",
        "type": "ui_chart",
        "z": "83999a84a6e2ec86",
        "name": "Cardio room Temperature",
        "group": "8da36940b7d54ef2",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Cardio room Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 990,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "db1ea62c9debabf4",
        "type": "ui_chart",
        "z": "83999a84a6e2ec86",
        "name": "Lifting room Temperature",
        "group": "d3a91e9f4eeca1da",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Lifting room Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 990,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "0e4d95dd34576541",
        "type": "ui_button",
        "z": "83999a84a6e2ec86",
        "name": "",
        "group": "dcb8625254a4853e",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 730,
        "y": 20,
        "wires": [
            [
                "0ab3de718e78e840"
            ]
        ]
    },
    {
        "id": "ee2fd0f7416a7442",
        "type": "ui_button",
        "z": "83999a84a6e2ec86",
        "name": "",
        "group": "08720a1c55b423f2",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 730,
        "y": 60,
        "wires": [
            [
                "815ec109ba6ee5ca"
            ]
        ]
    },
    {
        "id": "cb4ccaa43274f98f",
        "type": "ui_button",
        "z": "83999a84a6e2ec86",
        "name": "",
        "group": "8da36940b7d54ef2",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 730,
        "y": 180,
        "wires": [
            [
                "e9ba3a36e6d65ed4"
            ]
        ]
    },
    {
        "id": "e446930151e82e0b",
        "type": "ui_button",
        "z": "83999a84a6e2ec86",
        "name": "",
        "group": "d3a91e9f4eeca1da",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 730,
        "y": 260,
        "wires": [
            [
                "db1ea62c9debabf4"
            ]
        ]
    },
    {
        "id": "f9fe51b4172bc4b9",
        "type": "ui_toast",
        "z": "83999a84a6e2ec86",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "ALERT!!!",
        "name": "Alert Notification",
        "x": 930,
        "y": 560,
        "wires": []
    },
    {
        "id": "895a4863be8d4500",
        "type": "function",
        "z": "83999a84a6e2ec86",
        "name": "Alert",
        "func": "// 将 msg.payload.content 作为消息传递给 ui_toast 节点\nmsg.payload = msg.alert.message\nmsg.topic = msg.alert.room;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 560,
        "wires": [
            [
                "f9fe51b4172bc4b9"
            ]
        ]
    },
    {
        "id": "6065cb7d84faa07c",
        "type": "inject",
        "z": "83999a84a6e2ec86",
        "name": "test",
        "props": [
            {
                "p": "alert",
                "v": "{\"room\": \"cardio_room\",\"message\": \"ALERT: The temperature in room cardio room is 28.8°C, which is above the threshold!\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 510,
        "y": 560,
        "wires": [
            [
                "895a4863be8d4500"
            ]
        ]
    },
    {
        "id": "1a011a2ea87b71f6",
        "type": "mqtt in",
        "z": "8e771e50a977c0f3",
        "name": "",
        "topic": "gym/occupancy/current",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "118e415f53d5c04c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 180,
        "wires": [
            [
                "c8caa314b6313fba"
            ]
        ]
    },
    {
        "id": "c8caa314b6313fba",
        "type": "function",
        "z": "8e771e50a977c0f3",
        "name": "Current Occupancy",
        "func": "\nvar payload = msg.payload.message;\nvar currentOccupancy = payload.data.current_occupancy || 0;\n\n// 解析时间并转换为时间戳\nvar timestamp = new Date(payload.timestamp.replace(\" \", \"T\")).getTime();\n\n// 发送到 Chart\nmsg.topic = \"occupancy\";\nmsg.payload = currentOccupancy;\n\n// 如果 currentOccupancy 大于 60，则发送 alert\nif (currentOccupancy > 60) {\n    node.warn(\"⚠️ Alert: Occupancy exceeded 60! Current: \" + currentOccupancy);\n    \n    var alertMsg = {\n        topic: \"alert\",\n        payload: \"Occupancy Alert! Current: \" + currentOccupancy + \"! Please choose another time to come for better experience!\",\n        timestamp: timestamp\n    };\n\n    return [msg, alertMsg]; // 输出两个消息，第一个用于 chart，第二个用于 alert\n}\n\nreturn [msg, null]; // 如果不触发警报，第二个输出为空\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "9ce050ca5d5ec46d"
            ],
            [
                "030d83d9bf42e0af"
            ]
        ]
    },
    {
        "id": "9ce050ca5d5ec46d",
        "type": "ui_chart",
        "z": "8e771e50a977c0f3",
        "name": "Occupancy",
        "group": "25d9c33a66e55a71",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Occupancy",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "20",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "600e5f192e09472e",
        "type": "mqtt in",
        "z": "8e771e50a977c0f3",
        "name": "",
        "topic": "gym/occupancy/prediction",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "118e415f53d5c04c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 420,
        "wires": [
            [
                "56f5e88c5359391f"
            ]
        ]
    },
    {
        "id": "56f5e88c5359391f",
        "type": "function",
        "z": "8e771e50a977c0f3",
        "name": "Prediction",
        "func": "// 解析输入的 payload\nvar payload = msg.payload.message;\nvar predictionMatrix = payload.data.prediction_matrix;\n\n// 输出 prediction_matrix\nmsg.payload = predictionMatrix;\n\n// 发送格式化后的数据到下游节点\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 420,
        "wires": [
            [
                "66265b406ab82a44"
            ]
        ]
    },
    {
        "id": "0e4ccff87f3bc4ed",
        "type": "inject",
        "z": "8e771e50a977c0f3",
        "name": "Simulated Prediction Data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"prediction_matrix\":[[10,20,30,40,50,60,70],[15,25,35,45,55,65,75],[20,30,40,50,60,70,80],[25,35,45,55,65,75,85],[30,40,50,60,70,80,90],[35,45,55,65,75,85,95],[40,50,60,70,80,90,100]]}",
        "payloadType": "json",
        "x": 230,
        "y": 520,
        "wires": [
            [
                "66265b406ab82a44"
            ]
        ]
    },
    {
        "id": "8540cdc88c8f93e7",
        "type": "function",
        "z": "8e771e50a977c0f3",
        "name": "Prediction Matrix",
        "func": "// Get the selected day from the dropdown\nlet selectedDay = flow.get(\"selectedDay\");\n\n// Retrieve the stored prediction matrix from flow memory\nlet predictionMatrix = flow.get(\"predictionMatrix\");\n\nif (selectedDay === undefined || !predictionMatrix) {\n    //node.warn(\"No day selected or prediction matrix missing.\");\n    return null;  // Stop execution until valid data is available\n}\n\n// Define labels for time slots\nlet timeSlots = [\n    \"8:00-10:00\", \"10:00-12:00\", \"12:00-14:00\",\n    \"14:00-16:00\", \"16:00-18:00\", \"18:00-20:00\", \n    \"20:00-22:00\", \"22:00-24:00\",\"00:00-08:00\"\n];\n\nlet formattedData = [];\n\n// Extract data for the selected day\nfor (let i = 0; i < timeSlots.length; i++) {\n    formattedData.push({ \"x\": timeSlots[i], \"y\": predictionMatrix[i][selectedDay] });\n}\n\n// Format for UI Chart node\nmsg.payload = [\n    {\n        \"series\": [\"Predicted Occupancy\"],\n        \"data\": [formattedData.map(d => d.y)],\n        \"labels\": formattedData.map(d => d.x)\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 420,
        "wires": [
            [
                "e77c0abb88029440"
            ]
        ]
    },
    {
        "id": "e77c0abb88029440",
        "type": "ui_chart",
        "z": "8e771e50a977c0f3",
        "name": "",
        "group": "ac4dcaf121851566",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Future Gym Occupancy",
        "chartType": "bar",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "7",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "5f74587e6b0d1a7e",
        "type": "change",
        "z": "8e771e50a977c0f3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selectedDay",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 560,
        "wires": [
            [
                "8540cdc88c8f93e7"
            ]
        ]
    },
    {
        "id": "1d28bd78ada7fc44",
        "type": "ui_dropdown",
        "z": "8e771e50a977c0f3",
        "name": "",
        "label": "Select Day",
        "tooltip": "",
        "place": "Select option",
        "group": "ac4dcaf121851566",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "\"Monday\"",
                "value": 0,
                "type": "num"
            },
            {
                "label": "\"Tuesday\"",
                "value": 1,
                "type": "num"
            },
            {
                "label": "\"Wednesday\"",
                "value": 2,
                "type": "num"
            },
            {
                "label": "\"Thursday\"",
                "value": 3,
                "type": "num"
            },
            {
                "label": "\"Friday\"",
                "value": "4",
                "type": "str"
            },
            {
                "label": "\"Saturday\"",
                "value": "5",
                "type": "str"
            },
            {
                "label": "\"Sunday\"",
                "value": "6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 490,
        "y": 560,
        "wires": [
            [
                "5f74587e6b0d1a7e"
            ]
        ]
    },
    {
        "id": "66265b406ab82a44",
        "type": "change",
        "z": "8e771e50a977c0f3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "predictionMatrix",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 420,
        "wires": [
            [
                "8540cdc88c8f93e7"
            ]
        ]
    },
    {
        "id": "a8dc0897298d0654",
        "type": "ui_button",
        "z": "8e771e50a977c0f3",
        "name": "",
        "group": "ac4dcaf121851566",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart occ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "e77c0abb88029440"
            ]
        ]
    },
    {
        "id": "99e2f3c08acba0d6",
        "type": "ui_button",
        "z": "8e771e50a977c0f3",
        "name": "",
        "group": "25d9c33a66e55a71",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart occ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 540,
        "y": 68,
        "wires": [
            [
                "9ce050ca5d5ec46d"
            ]
        ]
    },
    {
        "id": "ccdc7c58c4905854",
        "type": "mqtt in",
        "z": "8e771e50a977c0f3",
        "name": "",
        "topic": "gym/group_availability/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "118e415f53d5c04c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 800,
        "wires": [
            [
                "c4a261f83bf08e96"
            ]
        ]
    },
    {
        "id": "cda18631685230ad",
        "type": "ui_chart",
        "z": "8e771e50a977c0f3",
        "name": "Total Machine Availability",
        "group": "6ca24e17d3613a9a",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Total Machine Availability",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1190,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "90c03786b25e43cb",
        "type": "ui_button",
        "z": "8e771e50a977c0f3",
        "name": "",
        "group": "6ca24e17d3613a9a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 690,
        "y": 700,
        "wires": [
            [
                "cda18631685230ad"
            ]
        ]
    },
    {
        "id": "c4a261f83bf08e96",
        "type": "function",
        "z": "8e771e50a977c0f3",
        "name": "Group Machine Available",
        "func": "// 解析 MQTT 数据\nvar payload = msg.payload;\nvar machineType = payload.topic.split(\"/\").pop();  // 提取 machine_type，例如 treadmill\n\n// 提取可用和忙碌机器数量\nvar available = payload.message.data.available;\nvar busy = payload.message.data.busy;\n\n// 获取存储的历史数据（如果没有，则初始化）\nvar machineData = flow.get(\"machineAvailability\") || {};\n\n// 更新当前机器类型的数据\nmachineData[machineType] = {\n    available: available,\n    busy: busy\n};\n\n// 保存更新后的数据到 flow 变量\nflow.set(\"machineAvailability\", machineData);\n\n// 继续传递 msg（用于 Debug）\nmsg.payload = machineData;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 800,
        "wires": [
            [
                "97f242b619b26b74"
            ]
        ]
    },
    {
        "id": "97f242b619b26b74",
        "type": "change",
        "z": "8e771e50a977c0f3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "machines",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 800,
        "wires": [
            [
                "5d875f065d1a1ae7"
            ]
        ]
    },
    {
        "id": "5d875f065d1a1ae7",
        "type": "function",
        "z": "8e771e50a977c0f3",
        "name": "Machines",
        "func": "let machineData = flow.get(\"machines\");\n\n// 初始化\nvar labels = [];\nvar availableData = [];\nvar busyData = [];\n\n// 遍历所有机器类型，构建 Chart 数据\nfor (var type in machineData) {\n    // ✅ 裁剪过长的 label，超过 10 个字符就省略\n    // var shortLabel = type.length > 10 ? type.substring(0, 10) + \"...\" : type;\n    var shortLabel = type.replace(/ /g, \"\\n\");\n    labels.push(shortLabel);\n    availableData.push(machineData[type].available || 0);\n    busyData.push(machineData[type].busy || 0);\n}\n\n// 确保数据长度匹配\nif (availableData.length !== labels.length || busyData.length !== labels.length) {\n    node.warn(\"Data and labels length mismatch!\");\n}\n\n// 构造 UI Chart 所需格式\nmsg.payload = [\n    {\n        \"series\": [\"Available\", \"Busy\"],\n        \"data\": [availableData, busyData],\n        \"labels\": labels\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 800,
        "wires": [
            [
                "cda18631685230ad"
            ]
        ]
    },
    {
        "id": "030d83d9bf42e0af",
        "type": "ui_toast",
        "z": "8e771e50a977c0f3",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "ALERT!!!",
        "name": "Alert Notification",
        "x": 730,
        "y": 260,
        "wires": []
    },
    {
        "id": "d0564031e3833876",
        "type": "inject",
        "z": "8e771e50a977c0f3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Occupancy Alert! Current: 68! Please choose another time to come for better experience!",
        "payloadType": "str",
        "x": 450,
        "y": 260,
        "wires": [
            [
                "030d83d9bf42e0af"
            ]
        ]
    },
    {
        "id": "1d391e8e22975876",
        "type": "http request",
        "z": "f0473a394604db55",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://thingspeak_reader:8089/thingspeak_adaptor/?channel=entrance",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 130,
        "y": 220,
        "wires": [
            [
                "35b56da045f71345"
            ]
        ]
    },
    {
        "id": "ea51bc78eb6e5bab",
        "type": "inject",
        "z": "f0473a394604db55",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "1d391e8e22975876"
            ]
        ]
    },
    {
        "id": "35b56da045f71345",
        "type": "csv",
        "z": "f0473a394604db55",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r",
        "temp": "created_at,entry_id,current_occupancy,temperature,humidity",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 290,
        "y": 220,
        "wires": [
            [
                "5c540b3a3e8b52f8"
            ]
        ]
    },
    {
        "id": "8f134f77b6887025",
        "type": "function",
        "z": "f0473a394604db55",
        "name": "History Data Entrance",
        "func": "var data = flow.get(\"allData\") || [];\n//var data = msg.payload; // CSV 解析后的 JSON 数组\nvar startDateTimestamp = flow.get(\"startDate\");\nvar endDateTimestamp = flow.get(\"endDate\");\n\nif (!startDateTimestamp || !endDateTimestamp) {\n    node.warn(\"Please select the time!\");\n    return null;  // 停止执行\n}\n// 将时间戳转换为 Date 对象\nvar startDate = new Date(startDateTimestamp);\nvar endDate = new Date(endDateTimestamp);\n\nvar labels = [];\nvar temperatureData = [];\nvar humidityData = [];\nvar occupancyData = [];\n\n// 遍历数据，整理数据格式\ndata = Array.isArray(msg.payload) ? msg.payload : [msg.payload];\ndata.forEach(item => {\n    if (!item || !item.created_at) {\n        return; // 跳过没有 created_at 的数据\n    }\n    var timestampStr = item.created_at.replace(\" UTC\", \"\");  // 去掉 UTC\n    var timestamp = new Date(timestampStr);\n    if (timestamp >= startDate && timestamp <= endDate) {\n        labels.push(timestampStr);\n        temperatureData.push(parseFloat(item.temperature || 0)); \n        humidityData.push(parseFloat(item.humidity || 0)); \n        occupancyData.push(parseFloat(item.current_occupancy || 0));\n    }\n});\n\n\n// **创建 3 个 msg**\nvar msgOccupancy = {\n    payload: [\n        {\n            \"series\": [\"Occupancy (count)\"],\n            \"data\": [occupancyData],\n            \"labels\": labels\n        }\n    ]\n};\n\nvar msgTemperature = {\n    payload: [\n        {\n            \"series\": [\"Temperature (°C)\"],\n            \"data\": [temperatureData],\n            \"labels\": labels\n        }\n    ]\n};\n\nvar msgHumidity = {\n    payload: [\n        {\n            \"series\": [\"Humidity (%)\"],\n            \"data\": [humidityData],\n            \"labels\": labels\n        }\n    ]\n};\n\n\n// **返回 3 个输出**\nreturn [ msgOccupancy, msgTemperature, msgHumidity];\n\n\n// var data = msg.payload; // CSV 解析后的 JSON 数组\n\n// var labels = [];\n// var temperatureData = [];\n// var humidityData = [];\n// var occupancyData = [];\n\n// // 遍历数据，整理数据格式\n// data.forEach(item => {\n//     if (item.created_at) {\n//         labels.push(item.created_at);  // x 轴时间\n//         temperatureData.push(parseFloat(item.temperature || 0)); \n//         humidityData.push(parseFloat(item.humidity || 0)); \n//         occupancyData.push(parseFloat(item.current_occupancy || 0));\n//     }\n// });\n\n// // **创建 3 个 msg**\n// var msgTemperature = {\n//     payload: [\n//         {\n//             \"series\": [\"Temperature (°C)\"],\n//             \"data\": [temperatureData],\n//             \"labels\": labels\n//         }\n//     ]\n// };\n\n// var msgHumidity = {\n//     payload: [\n//         {\n//             \"series\": [\"Humidity (%)\"],\n//             \"data\": [humidityData],\n//             \"labels\": labels\n//         }\n//     ]\n// };\n\n// var msgOccupancy = {\n//     payload: [\n//         {\n//             \"series\": [\"Occupancy (count)\"],\n//             \"data\": [occupancyData],\n//             \"labels\": labels\n//         }\n//     ]\n// };\n\n// // **返回 3 个输出**\n// return [msgTemperature, msgHumidity, msgOccupancy];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 220,
        "wires": [
            [
                "9364cd951bcb6266",
                "10e02f950ec65cbc"
            ],
            [
                "ca2106bc0e745fad"
            ],
            [
                "517a52d8d051a462"
            ]
        ]
    },
    {
        "id": "9364cd951bcb6266",
        "type": "ui_chart",
        "z": "f0473a394604db55",
        "name": "",
        "group": "5c444c32fba77d46",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Occupancy History",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1070,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "517a52d8d051a462",
        "type": "ui_chart",
        "z": "f0473a394604db55",
        "name": "",
        "group": "5c444c32fba77d46",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Humidity History",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1070,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "ca2106bc0e745fad",
        "type": "ui_chart",
        "z": "f0473a394604db55",
        "name": "",
        "group": "5c444c32fba77d46",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Temperature History",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1080,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "aa61710182d2f778",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "",
        "group": "5c444c32fba77d46",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 890,
        "y": 200,
        "wires": [
            [
                "ca2106bc0e745fad"
            ]
        ]
    },
    {
        "id": "f95a7c1d8a87760e",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "",
        "group": "5c444c32fba77d46",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "517a52d8d051a462"
            ]
        ]
    },
    {
        "id": "b6f94412dc0c4bc2",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "",
        "group": "5c444c32fba77d46",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 870,
        "y": 140,
        "wires": [
            [
                "9364cd951bcb6266"
            ]
        ]
    },
    {
        "id": "10e02f950ec65cbc",
        "type": "debug",
        "z": "f0473a394604db55",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 120,
        "wires": []
    },
    {
        "id": "80f343d9ff9d25e6",
        "type": "ui_date_picker",
        "z": "f0473a394604db55",
        "name": "",
        "label": "Start Date",
        "group": "5c444c32fba77d46",
        "order": 1,
        "width": 10,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "a4720bd749773874"
            ]
        ]
    },
    {
        "id": "a4720bd749773874",
        "type": "change",
        "z": "f0473a394604db55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "startDate",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "8f134f77b6887025"
            ]
        ]
    },
    {
        "id": "db6c98c287b51f5e",
        "type": "ui_date_picker",
        "z": "f0473a394604db55",
        "name": "",
        "label": "End Date",
        "group": "5c444c32fba77d46",
        "order": 2,
        "width": 10,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 120,
        "y": 400,
        "wires": [
            [
                "d1e3c132eda6536f"
            ]
        ]
    },
    {
        "id": "d1e3c132eda6536f",
        "type": "change",
        "z": "f0473a394604db55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "endDate",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 400,
        "wires": [
            [
                "8f134f77b6887025"
            ]
        ]
    },
    {
        "id": "7a695eadc5ec768e",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "Submit",
        "group": "5c444c32fba77d46",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Submit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 120,
        "wires": [
            [
                "8f134f77b6887025",
                "1d391e8e22975876"
            ]
        ]
    },
    {
        "id": "5c540b3a3e8b52f8",
        "type": "function",
        "z": "f0473a394604db55",
        "name": "csv to flow",
        "func": "var csvData = msg.payload;\nflow.set(\"data\", csvData);  // 存入 flow\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 220,
        "wires": [
            [
                "8f134f77b6887025"
            ]
        ]
    },
    {
        "id": "f44097746b52fc73",
        "type": "http request",
        "z": "f0473a394604db55",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://thingspeak_reader:8089/thingspeak_adaptor/?channel=changing_room",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 110,
        "y": 640,
        "wires": [
            [
                "644cad0e4cafa03a"
            ]
        ]
    },
    {
        "id": "644cad0e4cafa03a",
        "type": "csv",
        "z": "f0473a394604db55",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r",
        "temp": "created_at,entry_id,temperature,humidity",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 270,
        "y": 640,
        "wires": [
            [
                "58b9b57aad675694"
            ]
        ]
    },
    {
        "id": "54dae16b1bc2ad3e",
        "type": "inject",
        "z": "f0473a394604db55",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "f44097746b52fc73"
            ]
        ]
    },
    {
        "id": "58b9b57aad675694",
        "type": "function",
        "z": "f0473a394604db55",
        "name": "csv to flow",
        "func": "var csvData = msg.payload;\nflow.set(\"data\", csvData);  // 存入 flow\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 640,
        "wires": [
            [
                "f49652ad3087b73e"
            ]
        ]
    },
    {
        "id": "f49652ad3087b73e",
        "type": "function",
        "z": "f0473a394604db55",
        "name": "History Data ChangingRoom",
        "func": "var data = flow.get(\"allData\") || [];\n//var data = msg.payload; // CSV 解析后的 JSON 数组\nvar startDateTimestamp = flow.get(\"startDate\");\nvar endDateTimestamp = flow.get(\"endDate\");\n\nif (!startDateTimestamp || !endDateTimestamp) {\n    node.warn(\"请选择起始和结束时间\");\n    return null;  // 停止执行\n}\n// 将时间戳转换为 Date 对象\nvar startDate = new Date(startDateTimestamp);\nvar endDate = new Date(endDateTimestamp);\n\nvar labels = [];\nvar temperatureData = [];\nvar humidityData = [];\n\n// 遍历数据，整理数据格式\ndata = Array.isArray(msg.payload) ? msg.payload : [msg.payload];\ndata.forEach(item => {\n    if (!item || !item.created_at) {\n        return; // 跳过没有 created_at 的数据\n    }\n    var timestampStr = item.created_at.replace(\" UTC\", \"\");  // 去掉 UTC\n    var timestamp = new Date(timestampStr);\n    if (timestamp >= startDate && timestamp <= endDate) {\n        labels.push(timestampStr);\n        temperatureData.push(parseFloat(item.temperature || 0)); \n        humidityData.push(parseFloat(item.humidity || 0)); \n    }\n});\n\nvar msgTemperature = {\n    payload: [\n        {\n            \"series\": [\"Temperature (°C)\"],\n            \"data\": [temperatureData],\n            \"labels\": labels\n        }\n    ]\n};\n\nvar msgHumidity = {\n    payload: [\n        {\n            \"series\": [\"Humidity (%)\"],\n            \"data\": [humidityData],\n            \"labels\": labels\n        }\n    ]\n};\n\nreturn [msgTemperature, msgHumidity];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 640,
        "wires": [
            [
                "c7b659a580a5ec8c"
            ],
            [
                "e5ebcfcfcd72243f"
            ]
        ]
    },
    {
        "id": "c7b659a580a5ec8c",
        "type": "ui_chart",
        "z": "f0473a394604db55",
        "name": "",
        "group": "36a01849db401df3",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Temperature History",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "f350c65c02b1099e",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "",
        "group": "36a01849db401df3",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 770,
        "y": 560,
        "wires": [
            [
                "c7b659a580a5ec8c"
            ]
        ]
    },
    {
        "id": "e5ebcfcfcd72243f",
        "type": "ui_chart",
        "z": "f0473a394604db55",
        "name": "",
        "group": "36a01849db401df3",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Humidity History",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1010,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "952e20fc2e772376",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "",
        "group": "36a01849db401df3",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 770,
        "y": 720,
        "wires": [
            [
                "e5ebcfcfcd72243f"
            ]
        ]
    },
    {
        "id": "1141283ee4aebe27",
        "type": "change",
        "z": "f0473a394604db55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "startDate",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 760,
        "wires": [
            [
                "f49652ad3087b73e"
            ]
        ]
    },
    {
        "id": "06d1e5daa5c0da44",
        "type": "ui_date_picker",
        "z": "f0473a394604db55",
        "name": "",
        "label": "Start Date",
        "group": "36a01849db401df3",
        "order": 1,
        "width": 10,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 180,
        "y": 760,
        "wires": [
            [
                "1141283ee4aebe27"
            ]
        ]
    },
    {
        "id": "76c78cd81dc85a81",
        "type": "ui_date_picker",
        "z": "f0473a394604db55",
        "name": "",
        "label": "End Date",
        "group": "36a01849db401df3",
        "order": 2,
        "width": 10,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 180,
        "y": 820,
        "wires": [
            [
                "98e7a9ecc921965b"
            ]
        ]
    },
    {
        "id": "98e7a9ecc921965b",
        "type": "change",
        "z": "f0473a394604db55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "endDate",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 820,
        "wires": [
            [
                "f49652ad3087b73e"
            ]
        ]
    },
    {
        "id": "6c03a299300e083d",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "Submit",
        "group": "36a01849db401df3",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Submit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 540,
        "wires": [
            [
                "f49652ad3087b73e",
                "f44097746b52fc73"
            ]
        ]
    },
    {
        "id": "b420ac5b96be4d01",
        "type": "csv",
        "z": "f0473a394604db55",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r",
        "temp": "created_at,entry_id,temperature,humidity,treadmill,elliptical_trainer,stationary_bike,rowing_machine",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 250,
        "y": 1160,
        "wires": [
            [
                "8b2f6053951eba36"
            ]
        ]
    },
    {
        "id": "7549c1a5ae6223c7",
        "type": "inject",
        "z": "f0473a394604db55",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1060,
        "wires": [
            [
                "854f913bf4bd60c8"
            ]
        ]
    },
    {
        "id": "8b2f6053951eba36",
        "type": "function",
        "z": "f0473a394604db55",
        "name": "csv to flow",
        "func": "var csvData = msg.payload;\nflow.set(\"data\", csvData);  // 存入 flow\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1160,
        "wires": [
            [
                "92b51418045b1d75"
            ]
        ]
    },
    {
        "id": "92b51418045b1d75",
        "type": "function",
        "z": "f0473a394604db55",
        "name": "History Data CardioRoom",
        "func": "var data = flow.get(\"allData\") || [];\n//var data = msg.payload; // CSV 解析后的 JSON 数组\nvar startDateTimestamp = flow.get(\"startDate\");\nvar endDateTimestamp = flow.get(\"endDate\");\n\nif (!startDateTimestamp || !endDateTimestamp) {\n    node.warn(\"请选择起始和结束时间\");\n    return null;  // 停止执行\n}\n// 将时间戳转换为 Date 对象\nvar startDate = new Date(startDateTimestamp);\nvar endDate = new Date(endDateTimestamp);\n\nvar labels = [];\nvar temperatureData = [];\nvar humidityData = [];\n\nvar treadmillData = [];\nvar ellipticalTrainerData = [];\nvar stationaryBikeData = [];\nvar rowingMachineData = [];\n\n// 遍历数据，整理数据格式\ndata = Array.isArray(msg.payload) ? msg.payload : [msg.payload];\ndata.forEach(item => {\n    if (!item || !item.created_at) {\n        return; // 跳过没有 created_at 的数据\n    }\n    var timestampStr = item.created_at.replace(\" UTC\", \"\");  // 去掉 UTC\n    var timestamp = new Date(timestampStr);\n    if (timestamp >= startDate && timestamp <= endDate) {\n        labels.push(timestampStr);\n        temperatureData.push(parseFloat(item.temperature || 0)); \n        humidityData.push(parseFloat(item.humidity || 0)); \n\n        treadmillData.push(parseInt(item.treadmill || 0));\n        ellipticalTrainerData.push(parseInt(item.elliptical_trainer || 0));\n        stationaryBikeData.push(parseInt(item.stationary_bike || 0));\n        rowingMachineData.push(parseInt(item.rowing_machine || 0));\n    }\n});\n\nvar msgTemperature = {\n    payload: [\n        {\n            \"series\": [\"Temperature (°C)\"],\n            \"data\": [temperatureData],\n            \"labels\": labels\n        }\n    ]\n};\n\nvar msgHumidity = {\n    payload: [\n        {\n            \"series\": [\"Humidity (%)\"],\n            \"data\": [humidityData],\n            \"labels\": labels\n        }\n    ]\n};\n\nvar msgMachines = {\n    payload: [\n        {\n            \"series\": [\"Treadmill\", \"Elliptical Trainer\", \"Stationary Bike\", \"Rowing Machine\"],\n            \"data\": [treadmillData, ellipticalTrainerData, stationaryBikeData, rowingMachineData],\n            \"labels\": labels\n        }\n    ]\n};\n\nreturn [msgTemperature, msgHumidity, msgMachines];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1160,
        "wires": [
            [
                "24e8fad4c1bd7f93"
            ],
            [
                "813ad01dd67a23f4"
            ],
            [
                "f64e64a435874496"
            ]
        ]
    },
    {
        "id": "6fec13e72a871a01",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "",
        "group": "c9355b7e64101cd4",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 750,
        "y": 1000,
        "wires": [
            [
                "24e8fad4c1bd7f93"
            ]
        ]
    },
    {
        "id": "95e3f46c22c47452",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "",
        "group": "c9355b7e64101cd4",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 830,
        "y": 1100,
        "wires": [
            [
                "813ad01dd67a23f4"
            ]
        ]
    },
    {
        "id": "f28f4c65b26441d8",
        "type": "change",
        "z": "f0473a394604db55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "startDate",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1280,
        "wires": [
            [
                "92b51418045b1d75"
            ]
        ]
    },
    {
        "id": "5e4e9492a00d71ef",
        "type": "ui_date_picker",
        "z": "f0473a394604db55",
        "name": "",
        "label": "Start Date",
        "group": "c9355b7e64101cd4",
        "order": 1,
        "width": 10,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 160,
        "y": 1280,
        "wires": [
            [
                "f28f4c65b26441d8"
            ]
        ]
    },
    {
        "id": "48d3223a70d1080c",
        "type": "ui_date_picker",
        "z": "f0473a394604db55",
        "name": "",
        "label": "End Date",
        "group": "c9355b7e64101cd4",
        "order": 2,
        "width": 10,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 160,
        "y": 1340,
        "wires": [
            [
                "d9108daa199f75c5"
            ]
        ]
    },
    {
        "id": "d9108daa199f75c5",
        "type": "change",
        "z": "f0473a394604db55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "endDate",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1340,
        "wires": [
            [
                "92b51418045b1d75"
            ]
        ]
    },
    {
        "id": "71acfb9f5c248a12",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "Submit",
        "group": "c9355b7e64101cd4",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Submit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 420,
        "y": 1060,
        "wires": [
            [
                "92b51418045b1d75",
                "854f913bf4bd60c8"
            ]
        ]
    },
    {
        "id": "854f913bf4bd60c8",
        "type": "http request",
        "z": "f0473a394604db55",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://thingspeak_reader:8089/thingspeak_adaptor/?channel=cardio_room",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 90,
        "y": 1160,
        "wires": [
            [
                "b420ac5b96be4d01"
            ]
        ]
    },
    {
        "id": "24e8fad4c1bd7f93",
        "type": "ui_chart",
        "z": "f0473a394604db55",
        "name": "",
        "group": "c9355b7e64101cd4",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Temperature History",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "813ad01dd67a23f4",
        "type": "ui_chart",
        "z": "f0473a394604db55",
        "name": "",
        "group": "c9355b7e64101cd4",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Humidity History",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1010,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "f64e64a435874496",
        "type": "ui_chart",
        "z": "f0473a394604db55",
        "name": "",
        "group": "c9355b7e64101cd4",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Machines History",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1010,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "e2ea2d5296fe3548",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "",
        "group": "c9355b7e64101cd4",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 750,
        "y": 1260,
        "wires": [
            [
                "f64e64a435874496"
            ]
        ]
    },
    {
        "id": "ddf9ae6c2eeaec5f",
        "type": "csv",
        "z": "f0473a394604db55",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r",
        "temp": "created_at,entry_id,temperature,humidity,cable_machine,leg_press_machine,smith_machine,lat_pulldown_machine",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 230,
        "y": 1640,
        "wires": [
            [
                "aaa50116db2c95f4"
            ]
        ]
    },
    {
        "id": "dfcba16d9611725e",
        "type": "inject",
        "z": "f0473a394604db55",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1540,
        "wires": [
            [
                "42486739980724d1"
            ]
        ]
    },
    {
        "id": "aaa50116db2c95f4",
        "type": "function",
        "z": "f0473a394604db55",
        "name": "csv to flow",
        "func": "var csvData = msg.payload;\nflow.set(\"data\", csvData);  // 存入 flow\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1640,
        "wires": [
            [
                "76891110af83db5f"
            ]
        ]
    },
    {
        "id": "76891110af83db5f",
        "type": "function",
        "z": "f0473a394604db55",
        "name": "History Data LiftingRoom",
        "func": "var data = flow.get(\"allData\") || [];\n//var data = msg.payload; // CSV 解析后的 JSON 数组\nvar startDateTimestamp = flow.get(\"startDate\");\nvar endDateTimestamp = flow.get(\"endDate\");\n\nif (!startDateTimestamp || !endDateTimestamp) {\n    node.warn(\"请选择起始和结束时间\");\n    return null;  // 停止执行\n}\n// 将时间戳转换为 Date 对象\nvar startDate = new Date(startDateTimestamp);\nvar endDate = new Date(endDateTimestamp);\n\nvar labels = [];\nvar temperatureData = [];\nvar humidityData = [];\n//cable_machine,leg_press_machine,smith_machine,lat_pulldown_machine\nvar cableData = [];\nvar legpressData = [];\nvar smithData = [];\nvar latpulldownData = [];\n\n// 遍历数据，整理数据格式\ndata = Array.isArray(msg.payload) ? msg.payload : [msg.payload];\ndata.forEach(item => {\n    if (!item || !item.created_at) {\n        return; // 跳过没有 created_at 的数据\n    }\n    var timestampStr = item.created_at.replace(\" UTC\", \"\");  // 去掉 UTC\n    var timestamp = new Date(timestampStr);\n    if (timestamp >= startDate && timestamp <= endDate) {\n        labels.push(timestampStr);\n        temperatureData.push(parseFloat(item.temperature || 0)); \n        humidityData.push(parseFloat(item.humidity || 0)); \n\n        cableData.push(parseInt(item.cable_machine || 0));\n        legpressData.push(parseInt(item.leg_press_machine || 0));\n        smithData.push(parseInt(item.smith_machine || 0));\n        latpulldownData.push(parseInt(item.lat_pulldown_machine || 0));\n    }\n});\n\nvar msgTemperature = {\n    payload: [\n        {\n            \"series\": [\"Temperature (°C)\"],\n            \"data\": [temperatureData],\n            \"labels\": labels\n        }\n    ]\n};\n\nvar msgHumidity = {\n    payload: [\n        {\n            \"series\": [\"Humidity (%)\"],\n            \"data\": [humidityData],\n            \"labels\": labels\n        }\n    ]\n};\n\nvar msgMachines = {\n    payload: [\n        {\n            \"series\": [\"Cable Machine\", \"Leg Press Machine\", \"Smith Machine\", \"Lat Pulldown Machine\"],\n            \"data\": [cableData, legpressData, smithData, latpulldownData],\n            \"labels\": labels\n        }\n    ]\n};\n\nreturn [msgTemperature, msgHumidity, msgMachines];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1640,
        "wires": [
            [
                "7b2c6a7ef5d22e37"
            ],
            [
                "72450df781371093"
            ],
            [
                "421066b881c777ca"
            ]
        ]
    },
    {
        "id": "a72b8c034a5543ee",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "",
        "group": "21c3de1bad36dc76",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 730,
        "y": 1480,
        "wires": [
            [
                "7b2c6a7ef5d22e37"
            ]
        ]
    },
    {
        "id": "e3bc93bfd6be3e6e",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "",
        "group": "21c3de1bad36dc76",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 810,
        "y": 1580,
        "wires": [
            [
                "72450df781371093"
            ]
        ]
    },
    {
        "id": "5d4fefdb27642e15",
        "type": "change",
        "z": "f0473a394604db55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "startDate",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1760,
        "wires": [
            [
                "76891110af83db5f"
            ]
        ]
    },
    {
        "id": "3233d71e7de68951",
        "type": "ui_date_picker",
        "z": "f0473a394604db55",
        "name": "",
        "label": "Start Date",
        "group": "21c3de1bad36dc76",
        "order": 1,
        "width": 10,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 140,
        "y": 1760,
        "wires": [
            [
                "5d4fefdb27642e15"
            ]
        ]
    },
    {
        "id": "0bbc014bc4117d2a",
        "type": "ui_date_picker",
        "z": "f0473a394604db55",
        "name": "",
        "label": "End Date",
        "group": "21c3de1bad36dc76",
        "order": 2,
        "width": 10,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 140,
        "y": 1820,
        "wires": [
            [
                "52cc8f3dd584e094"
            ]
        ]
    },
    {
        "id": "52cc8f3dd584e094",
        "type": "change",
        "z": "f0473a394604db55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "endDate",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1820,
        "wires": [
            [
                "76891110af83db5f"
            ]
        ]
    },
    {
        "id": "62abde8cdcd84c08",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "Submit",
        "group": "21c3de1bad36dc76",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Submit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 1540,
        "wires": [
            [
                "76891110af83db5f",
                "42486739980724d1"
            ]
        ]
    },
    {
        "id": "42486739980724d1",
        "type": "http request",
        "z": "f0473a394604db55",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://thingspeak_reader:8089/thingspeak_adaptor/?channel=lifting_room",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 70,
        "y": 1640,
        "wires": [
            [
                "ddf9ae6c2eeaec5f"
            ]
        ]
    },
    {
        "id": "31ce88cc03742e94",
        "type": "ui_button",
        "z": "f0473a394604db55",
        "name": "",
        "group": "21c3de1bad36dc76",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 730,
        "y": 1740,
        "wires": [
            [
                "421066b881c777ca"
            ]
        ]
    },
    {
        "id": "7b2c6a7ef5d22e37",
        "type": "ui_chart",
        "z": "f0473a394604db55",
        "name": "",
        "group": "21c3de1bad36dc76",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Temperature History",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1000,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "72450df781371093",
        "type": "ui_chart",
        "z": "f0473a394604db55",
        "name": "",
        "group": "21c3de1bad36dc76",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Humidity History",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 990,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "421066b881c777ca",
        "type": "ui_chart",
        "z": "f0473a394604db55",
        "name": "",
        "group": "21c3de1bad36dc76",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Machines History",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 990,
        "y": 1740,
        "wires": [
            []
        ]
    }
]